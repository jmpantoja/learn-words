# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    LearnWords\:
        resource: '../src/LearnWords/*'
        exclude: '../src/LearnWords/{*/Domain/Model,*/Infrastructure/Doctrine/Migrations,Kernel.php}'
        #exclude: '../src/LearnWords/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
    

#    # controllers are imported separately to make sure services can be injected
#    # as action arguments even if you don't extend any base controller class
    LearnWords\Term\Infrastructure\Symfony\Controller\:
        resource: '../src/LearnWords/Term/Infrastructure/Symfony/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.term:
        class: LearnWords\Term\Infrastructure\Sonata\Admin\TermAdmin
        arguments: [~, LearnWords\Term\Domain\Model\Term, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Term }
        public: true

    admin.tag:
        class: LearnWords\Term\Infrastructure\Sonata\Admin\TagAdmin
        arguments: [~, LearnWords\Term\Domain\Model\Tag, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Tag }
        public: true
