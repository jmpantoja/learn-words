version: '3.4'

services:
  php:
    image: ${CONTAINER_REGISTRY_BASE}/php
    build:
      context: .
      target: planb_php
      cache_from:
        - quay.io/api-platform/php
        - quay.io/api-platform/nginx
        - quay.io/api-platform/varnish
    environment:
      APP_ENV: prod  
    depends_on:
      - db
    # Comment out these volumes in production
    volumes:
      - ./app:/srv/app:rw
  #      - ./app/var:/srv/app/var:rw

  encore:
    image: node:10-alpine
    volumes:
      - ./app:/app
    ports:
      - "${DEV_SERVER_PORT:-8080}:8080"
    working_dir: /app

  nuxt:
    image: ${CONTAINER_REGISTRY_BASE}/nuxt
    build:
      context: .
      target: planb_nuxt
    volumes:
      - ./client:/srv/client:rw 

  nginx:
    image: ${CONTAINER_REGISTRY_BASE}/nginx
    build:
      context: .
      target: planb_nginx
      cache_from:
        - quay.io/api-platform/php
        - quay.io/api-platform/nginx
        - quay.io/api-platform/varnish 
    depends_on:
      - php
      
    volumes:
      - ./app/public:/srv/app/public:rw
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:rw
      - ./logs:/var/log/nginx:rw

  varnish:
    image: ${CONTAINER_REGISTRY_BASE}/varnish
    build:
      context: .
      target: planb_varnish
      cache_from:
        - quay.io/api-platform/php
        - quay.io/api-platform/nginx
        - quay.io/api-platform/varnish
    depends_on:
      - nginx
    volumes:
      - ./etc/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
      - /usr/local/var/varnish:exec

  redis:
    image: redis
    volumes:
      - ./data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  db:
    image: mysql:5.7
    #   command: --max_allowed_packet=32505856
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./data/mysql:/var/lib/mysql

  proxy:
    image: steveltn/https-portal:1
    depends_on:
      - varnish
    ports:
      - 80:80
      - 443:443
#    restart: always
    volumes:
      - ./etc/proxy/ssl_certs:/var/lib/https-portal
#      - ./etc/proxy/nginx-conf/default.ssl.conf.erb:/var/lib/nginx-conf/default.ssl.conf.erb:ro 
#      - ./etc/proxy/nginx-conf:/var/lib/nginx-conf    
